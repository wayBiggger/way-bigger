services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: project_learning_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # WebSocket service for real-time collaboration
  websocket:
    build: ./backend
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/project_learning_platform
      - REDIS_URL=redis://redis:6379
      - FRONTEND_URL=http://localhost:3000
      - DEBUG=true
      - SECRET_KEY=your-secret-key-here-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: python websocket_server.py

  # File storage service
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/project_learning_platform
      - REDIS_URL=redis://redis:6379
      - FRONTEND_URL=http://localhost:3000
      - DEBUG=true
      - SECRET_KEY=your-secret-key-here-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - GOOGLE_CLIENT_ID=1070207303216-8fc5a0okd7h7vlijjm0ff0sg1cd0h2lk.apps.googleusercontent.com
      - GOOGLE_CLIENT_SECRET=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
      - GITHUB_CLIENT_ID=
      - GITHUB_CLIENT_SECRET=
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - WEBSOCKET_URL=ws://websocket:8001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - file_storage:/app/storage
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000/api/v1
      - NEXT_PUBLIC_WEBSOCKET_URL=ws://localhost:8001
      - NEXT_PUBLIC_MINIO_ENDPOINT=http://localhost:9000
      - PORT=3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
      - websocket
    command: sh -c "npm ci && npm run dev"

volumes:
  postgres_data:
  redis_data:
  minio_data:
  file_storage:
